<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label5.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAMsAAAAvCAYAAABNLj6nAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        wwAADsMBx2+oZAAAA9lJREFUeF7tmQtygzAMRDkXB+I8nIbLcBjqb+IvWdkmCc2+Gc+0hNiWrJXkdjoI
        IRAUCyEgFAshIBQLISAUCyEgFAshIBQLISAUCyEgFAshIBQLISAUCyEgFAshIP9bLPt+bMt8zNN0TGbM
        x7Lt7kNCZPxjsezHOk/HvG7qJ/v7tljBrNQLaeC32rBtoVhIMz8lln2dj2leXaW5F6Yq3mTvxs9Dk9J2
        LKqNnjsn7PWhWCy2lZlU7+8eBFgnlT/7NLuqKvO8KLffkH01967Qr97X+fh85RwtlmHzdXYW8sriDm7K
        FGHV/43Z79ZCUdhgifc/OiBHMnZv9u45Jq76KlRTG1a8KBvVfl9V0Qf3NqG4RNLbLsS4YEkc+zNiGezT
        nlas7c6SVZeR6h+IEXCekVFBG8dK1H+FWCpzvlMsUj+M3Juda1yy69lb8wU/qi5vqir6fyamL48qhRNq
        5gDXFmYDd5QkSKw/0lFqnQrvnSWZim+hQ3ffTW2we8UDsF0s/mz8kAZ9uapmSOx0yUdgzoNmsfhFdcYz
        m7q4quzrogxUK0SZVjsTD34p0iCJ9xaTBbd799X8NVGUhZe/ZwMmeN6Q2NrEYvf0/JpPXgLBCPaK29l+
        b2kXi8Ju0A5s8Vq29wNxpM82q1ofb6laGCeWcoY0879IMtbHAr+o9eNlnM/NOu5nodOkfvBiyfwgFCpu
        uwa1s80Hmi6x+OAQZYsBWCeqw2gw+BRfzk/G6ZIfFYsmDJiAyC5grk4/1Kph3T8lGoIasvNTYulYuAvj
        lMJhDEaaUc+CIQsgMHBkYvHVJX3/WXWwQI2R+qEqFkm8NJ0xYudtxOLerw4kKNQcxXZjPOPE8jzEcCCB
        2ySWpLL44J3NHuRJZphYBJXFrPmi6qZgdt5GLP3oe8rjrywXrztMLO55y3brWbqAWyfac/TMnZcwCNvE
        UrDXtUkvpxKI6gFqZ8lHILcSiz4E78Aw4+rnV2xBLJbqIbnnhfEyIIoBpudLBeTXCKuQr2jBMzefJBBb
        xRLvu+abHFGCMAjsbBGi4xZi8c5bQgN9hkiffxp3SHYkh5f6CQncyuGGAfkYyfz+nXxZ/b4kGGXYdbXt
        SZKAKlq5lTxDYqePpRbbO8VCIEzAlw4IaSflwXNrXHI4dUkHYUcihWJ5A89Mm4JV5vr3/x/X2trXCVEs
        78C3Zskhwe3Qxdn2e7i4rTfn0N5+UizvIrrL+IFnUCOsX2nFLqLXhxQLISAUCyEgFAshIBQLISAUCyEg
        FAshIBQLISAUCyEgFAshIBQLISAUCyEgFAshIBQLISAUCyEQx/EH5huX2PKQ3dgAAAAASUVORK5CYII=
</value>
  </data>
</root>